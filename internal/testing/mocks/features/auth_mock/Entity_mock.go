// Code generated by mockery v2.53.3. DO NOT EDIT.

package auth_mock

import mock "github.com/stretchr/testify/mock"

// MockEntity is an autogenerated mock type for the Entity type
type MockEntity[T interface{}] struct {
	mock.Mock
}

type MockEntity_Expecter[T interface{}] struct {
	mock *mock.Mock
}

func (_m *MockEntity[T]) EXPECT() *MockEntity_Expecter[T] {
	return &MockEntity_Expecter[T]{mock: &_m.Mock}
}

// ID provides a mock function with no fields
func (_m *MockEntity[T]) ID() T {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for ID")
	}

	var r0 T
	if rf, ok := ret.Get(0).(func() T); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(T)
		}
	}

	return r0
}

// MockEntity_ID_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ID'
type MockEntity_ID_Call[T interface{}] struct {
	*mock.Call
}

// ID is a helper method to define mock.On call
func (_e *MockEntity_Expecter[T]) ID() *MockEntity_ID_Call[T] {
	return &MockEntity_ID_Call[T]{Call: _e.mock.On("ID")}
}

func (_c *MockEntity_ID_Call[T]) Run(run func()) *MockEntity_ID_Call[T] {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockEntity_ID_Call[T]) Return(_a0 T) *MockEntity_ID_Call[T] {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockEntity_ID_Call[T]) RunAndReturn(run func() T) *MockEntity_ID_Call[T] {
	_c.Call.Return(run)
	return _c
}

// NewMockEntity creates a new instance of MockEntity. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockEntity[T interface{}](t interface {
	mock.TestingT
	Cleanup(func())
}) *MockEntity[T] {
	mock := &MockEntity[T]{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
