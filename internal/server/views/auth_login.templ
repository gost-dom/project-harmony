package views

templ AuthLogin(redirectUrl string, data LoginFormData) {
	@Layout(Contents{Body: login_body(redirectUrl, data)})
}

type LoginFormData struct {
	Email              string
	EmailMissing       bool
	Password           string
	PasswordMissing    bool
	InvalidCredentials bool
}

func boolToString(b bool) string {
	if b {
		return "true"
	} else {
		return "false"
	}
}

templ login_body(redirectUrl string, formData LoginFormData) {
	<div class="w-full m-auto flex flex-col items-center">
		<div class="my-4 font-bold text-2xl dark:text-white">
			Project Harmony
		</div>
		<div
			class="bg-white rounded-lg shadow-md border md:mt-0 w-full sm:max-w-xl
  xl:p-0 dark:bg-gray-800 dark:border-gray-700"
		>
			<main class="p-6 space-y-4 md:space-y-6 sm:p-8">
				<h1
					class="text-center
text-xl font-bold leading-tight tracking-tight text-gray-900 md:text-4xl dark:text-white
        "
				>Login</h1>
				<form
					id="login-form"
					class="space-y-4 md:space-y-6"
					hx-post="/auth/login"
					hx-swap="innerHTML"
				>
					@LoginForm(redirectUrl, formData)
				</form>
			</main>
		</div>
	</div>
}

func invalid(v bool) (res templ.Attributes) {
	return templ.Attributes{
		"aria-invalid": boolToString(v),
	}
}

templ LoginForm(redirectUrl string, formData LoginFormData) {
	<input
		type="hidden"
		name="redirectUrl"
		value={ redirectUrl }
	/>
	@Field(FieldOptions{
		InputOptions: InputOptions{
			Id:              "email",
			Name:            "email",
			InputType:       "text",
			Required:        true,
			ValidationError: "Email is required",
			Autofocus:       true,
			Value:           formData.Email,
			Invalid:         formData.EmailMissing,
			Attributes:      invalid(formData.EmailMissing),
		},
		Label: "Email"})
	@Field(FieldOptions{
		InputOptions: InputOptions{
			Id:              "password",
			Name:            "password",
			InputType:       "password",
			ValidationError: "Password is required",
			Required:        true,
			Placeholder:     "••••••••",
			Value:           formData.Password,
			Invalid:         formData.PasswordMissing,
			Attributes:      invalid(formData.PasswordMissing),
		},
		Label: "Password",
	})
	<div class="flex items-center justify-between">
		<div class="flex items-start">
			<!--
						<div class="flex items-center h-5">
							<input
								class="w-4 h-4 border border-gray-300 rounded bg-gray-50 focus:ring-3 focus:ring-primary-300 dark:bg-gray-700 dark:border-gray-600 dark:focus:ring-primary-600 dark:ring-offset-gray-800"
								type="checkbox"
								id="remember"
							/>
						</div>
						<div class="ml-3 text-sm">
							<label
								class="block text-sm font-medium  text-gray-500 dark:text-gray-300"
								for="remember"
							>Remember me</label>
						</div>
            -->
		</div>
		<!--
					<a href="#" class="text-sm font-medium text-primary-600 hover:underline dark:text-primary-500">Forgot password?</a>
          -->
	</div>
	<button
		id="submit-login-form-button"
		type="submit"
		class="w-full text-white bg-cta hover:bg-ctabase-900 focus:ring-4
    focus:outline-none focus:ring-primary-300 font-medium rounded-lg text-sm
    px-5 py-2.5 text-center dark:bg-primary-600 dark:hover:bg-primary-700
    dark:focus:ring-primary-800"
	>
		Sign in
	</button>
	if formData.InvalidCredentials {
		<div id="alert-div" role="alert" aria-live="assertive" class="text-red-700">Email or password did not match</div>
	}
	<!--
    <p class="text-sm font-light text-gray-500 dark:text-gray-400">
        Don’t have an account yet? <a href="#" class="font-medium text-primary-600 hover:underline dark:text-primary-500">Sign up</a>
    </p>
    -->
}
