package views

import (
	. "harmony/internal/server/views"
	"net/mail"
)

templ Register(data RegisterFormData) {
	@Layout(Contents{Body: registerBody(data)})
}

type EmailField string

func (e *EmailField) Val() string { return *(*string)(e) }

func (e *EmailField) UnmarshalText(text []byte) (err error) {
	s := string(text)
	*e = EmailField(s)
	_, err = mail.ParseAddress(s)
	return err
}

type FormField struct {
	Value  string
	Errors []string
}

func (e FormField) Invalid() bool { return len(e.Errors) > 0 }

func (e FormField) ValidationError() string {
	if e.Invalid() {
		return e.Errors[0]
	}
	return ""
}

type RegisterFormData struct {
	Fullname          string `schema:"fullname,required"`
	Email             FormField
	TermsOfUse        bool
	TermsOfUseMissing bool
	NewsletterSignup  bool
	DisplayName       string
}

templ RegisterFormContents(data RegisterFormData) {
	@FieldOptions{
		InputOptions: InputOptions{
			Id:        "fullname",
			Name:      "fullname",
			InputType: "text",
			Autofocus: true,
			Value:     data.Fullname,
		},
		Label: "Full name",
	}
	@FieldOptions{
		InputOptions: InputOptions{
			Id:        "displayname",
			Name:      "displayname",
			InputType: "text",
			Value:     data.DisplayName,
		},
		Label: "Display name",
	}
	<br/>
	@FieldOptions{
		InputOptions: InputOptions{
			Id:              "email",
			Name:            "email",
			InputType:       "text",
			Required:        true,
			Autofocus:       true,
			Value:           string(data.Email.Value),
			Invalid:         data.Email.Invalid(),
			ValidationError: data.Email.ValidationError(),
		},
		Label: "Email",
	}
	@FieldOptions{
		InputOptions: InputOptions{
			Id:        "password",
			Name:      "password",
			InputType: "password",
			Autofocus: true,
		},
		Label: "Password",
	}
	<div>
		<input
			id="terms-of-use"
			type="checkbox"
			name="terms-of-use"
			checked?={ data.TermsOfUse }
			if data.TermsOfUseMissing {
				aria-describedby="terms-of-use-missing"
			}
		/>
		<label for="terms-of-use">I agree to the terms of use</label>
		if data.TermsOfUseMissing {
			<div id="terms-of-use-missing">You must accept the terms of use</div>
		}
	</div>
	<div>
		<input
			type="checkbox"
			name="newsletter-signup"
			id="newsletter-signup"
			checked?={ data.NewsletterSignup }
		/>
		<label for="newsletter-signup">Sign up for the newsletter</label>
	</div>
	<button
		type="submit"
		class="w-full text-white bg-cta hover:bg-ctabase-900 focus:ring-4
    focus:outline-none focus:ring-primary-300 font-medium rounded-lg text-sm
    px-5 py-2.5 text-center dark:bg-primary-600 dark:hover:bg-primary-700
    dark:focus:ring-primary-800"
	>Sign up!</button>
}

templ registerBody(formData RegisterFormData) {
	@AuthPageLayout() {
		<div class="bg-white rounded-lg shadow-md border md:mt-0 w-full sm:max-w-xl xl:p-0 dark:bg-gray-800 dark:border-gray-700">
			<main class="p-6 space-y-4 md:space-y-6 sm:p-8">
				<h1 class="text-center text-xl font-bold leading-tight tracking-tight text-gray-900 md:text-4xl dark:text-white">
					Register Account
				</h1>
				<form
					id="login-form"
					class="space-y-4 md:space-y-6"
					hx-post=""
				>
					@CSRFFields()
					@RegisterFormContents(formData)
				</form>
			</main>
		</div>
	}
}
